/** 
 *  This file tests the following events:
 * 
 *  1. user addition
 *  ----------------
 *  U <category> <username> <password> <full_name> <address> <phone_number>,
 *  where 'U' stands for "User", 
 *  <category> is one of: 
 *  + 'A': administrator
 *  + 'D': driver
 *  + 'P': passenger
 *  <full_name> contains (in this order): name, surname, and  
 *  <address> contains (in this order): city, street, street number, postal code
 *	
 *  2. user login
 *  ---------------------
 *  L <username> <password>
 *  
 *  3. show list of users
 *  ---------------------
 *  S U
 *  where 'S' stands for "Show" and 'U' for "Users"
 *
 *  4. add meeting points
 *  ---------------------
 *  M <description>
 *
 *  5. show meeting points
 *  ----------------------
 *  S M
 *  
 *  6. add vehicle category
 *  -----------------------
 *  V <vehicle_category>
 *
 *  7. define walking time
 *  ----------------------
 *  W <meeting_point_1> <meeting_point_2> <walking_time_in_minutes>
 *  
 *  8. show list of routes with no walking time assigned
 *  ----------------------------------------------------
 *  S W
 *
 *  9. user logout
 *  --------------
 *  O
 *
 *  10. add preferred vehicle category
 *  ----------------------------------
 *  P + <vehicle_category>
 *
 *  11. add non-preferred vehicle category
 *  --------------------------------------
 *  N + <vehicle_category>
 *
 *  12. show preferred vehicle categories
 *  -------------------------------------
 *  S P
 *
 *  13. show non-preferred vehicle categories
 *  -----------------------------------------
 *  S P
 *
 *  14. remove preferred vehicle category
 *  -------------------------------------
 *  P - <vehicle_category>
 *
 *  15. remove non-preferred vehicle categories
 *  -----------------------------------------
 *  N - <vehicle_category>
 *
 *  16. add preferred route
 *  -----------------------
 *  R <meeting_point_1> <meeting_point_2> <max_cost>, where
 *  <max_cost> is one of the following:
 *  + 0  --> free of charge 
 *  + -1 --> indifferent
 *  + a positive integer --> cost in €
 *
 *  17. show preferred routes
 *  -------------------------
 *  S R
 *
 *  18. add preferred moving
 *  ------------------------
 *  I <meeting_point_1> <meeting_point_2> <date> <max_cost>, where
 *  <date> is an integer from the set [1..365] and
 *  <max_cost> is one of the following:
 *  + -2 --> no selection (the cost is the same with the correspoding route's cost)
 *  + 0  --> free of charge 
 *  + -1 --> indifferent
 *  + a positive integer --> cost in €
 *
 *  19. show movings
 *  ----------------
 *  S S
 *
 *  20. vehicle purchase
 *  --------------------
 *  C <vehicle_id> <vehicle_category> <num_of_seats>
 *
 *  21. add moving service
 *  ----------------------
 *  E <meeting_point_1> <meeting_point_2> <date> <cost> <duration_in_minutes> <vehicle_id>, where
 *  <date> is an integer in the range [1..365],
 *  <max_cost> is one of the following:
 *  + 0  --> free of charge 
 *  + a positive integer --> cost in €
 *  and <duration_in_minutes> is a positive integer
 * 
 *  22. search for passengers
 *  -------------------------
 *  G, where
 *  this event shows any available passengers for each of the driver's moving services
 *
 *  23. notify passenger
 *  --------------------
 *  T <username> <meeting_point_1> <meeting_point_2> <date>, where
 *  "<meeting_point_1> <meeting_point_2> <date>" is the moving
 *
 *  24. search for vehicle
 *  ----------------------
 *  H <meeting_point_1> <meeting_point_2> <date>
 *  
 *  25. buy ticket
 *  --------------
 *  B <meeting_point_1> <meeting_point_2> <date> <vehicle_id>
 *
 *  26. show ticket
 *  ---------------
 *  S T <meeting_point_1> <meeting_point_2> <date>
 *
 *  27. show passengers list for this moving
 *  ----------------------------------------
 *  S L <meeting_point_1> <meeting_point_2> <date>
 *
 *  28. show passengers list for each scheduled moving
 *  --------------------------------------------------
 *  S C
 *
 *  28. cancel ticket
 *  -----------------
 *  K <meeting_point_1> <meeting_point_2> <date>
 *
 *  29. increment date
 *  ------------------
 *  D <days>, where
 *  <days> is a positive integer representing the days passed
 *
 *  30. rate and comment finished moving
 *  ------------------------------------
 *  R <meeting_point_1> <meeting_point_2> <date> <rate> <comments>, where
 *  "<meeting_point_1> <meeting_point_2> <date>" is the moving and
 *  <rate> is an integer in the range [0..100]
 *
 *  31. show passengers list for each completed moving
 *  --------------------------------------------------
 *  S E
 *  
 *  32. show drivers with bigger rate
 *  ---------------------------------
 *  S B <num>, where
 *  <num> is a positive integer representing the number of drivers
 *
 *  33. show drivers with smaller rate
 *  ----------------------------------
 *  S V <num>, where
 *  <num> is a positive integer representing the number of drivers
 *
 *  34. show more happy pasengers
 *  -----------------------------
 *  S H <num>, where
 *  <num> is a positive integer representing the number of passengers
 *  
 *  35. show less happy pasengers
 *  -----------------------------
 *  S Y <num>, where
 *  <num> is a positive integer representing the number of passengers
 *
 *  36. show all vehicles
 *  ---------------------
 *  S J
 *
 *  37. change user category
 *  ------------------------
 *  Y <username> <new_category>, where
 *  <new_category> is one of: 
 *	+ 'A': administrator
 *  + 'D': driver
 *  + 'P': passenger
 *
 *  38. group meeting points
 *  ------------------------
 *  Q <meeting_point_1> <meeting_point_2>, where
 *  <meeting_point_2> is the name of the meeting point replaced by the name <meeting_point_1>;
 *  i.e. after this command takes place, <meeting_point_2> has been replaced by <meeting_point_1>
 *  in the state of the system.
 *
 *  39. program shutdown
 *  --------------------
 *  Z
 */

// ==========================
// G. Passenger's interaction
// ==========================

// G.1. login passenger
// --------------------
L student 12345

// G.2. show movings
---------------------
S S

// G.3. cancel ticket
---------------------
K Giofyro Kentrikh_eisodos_TEI 5

// G.4. show movings
---------------------
S S

// G.5. logout passenger
------------------------
O

// =======================
// H. Drivers' interaction
// =======================

// H.1. login driver
// -----------------
// note: here driver should be notified for ticket cancelled by student
L bus_company 12345

// H.2. show passengers list for each scheduled moving
// ---------------------------------------------------
S C

// H.3. logout driver
---------------------
O


// ==============================
// I. Administrator's interaction
// ==============================

// I.1. login administrator
// ------------------------
L ekosmas 12345

// I.2. increment date
// -------------------
// note: the date becomes the 6th day
D 5

// I.3. logout administrator
----------------------------
O


// ==========================
// J. Passenger's interaction
// ==========================

// J.1. login passenger
// --------------------
L student 12345

// J.2. show movings
---------------------
S S

// J.3. rate and comment finished moving
// -------------------------------------
F Giofyro Kentrikh_eisodos_TEI 1 60 Eyxaristh diadromh, alla me poly kosmo :(
F Giofyro Kentrikh_eisodos_TEI 3 100 Teleia diadromh! :)

// J.4. logout passenger
------------------------
O

// J.5. similar actions for other passengers
// -----------------------------------------
L sveltos 12345
F Giofyro Kentrikh_eisodos_TEI 1 75 To lewforeio tha eprepe na exei ligotero kosmo!
F Giofyro Kentrikh_eisodos_TEI 3 100 Ola wraia! :)
F Chanioporta Giofyro 1 10 O odhgos odhgouse neyrika! Zoume apo tyxh!
F Kentrikh_eisodos_TEI Mouseio_Fysikhs_Istorias_Krhths 1 100 Poly kalo to podhlato!
O

L viastikos 12345
F Kalokairinou_10 Plateia_Eleftherias 1 100 Ola wraia!
F Plateia_Eleftherias Kalokairinou_10 1 90 Eixame ligh kinhsh sth diadromh poy apoloythisame.
O


// =======================
// K. Drivers' interaction
// =======================

// K.1. login driver
// -----------------
L bus_company 12345

// K.2. show passengers list for each scheduled moving
// ---------------------------------------------------
S C

// K.3. show passengers list for each completed moving
// ---------------------------------------------------
S E

// K.4. logout driver
---------------------
O


// ==============================
// L. Administrator's interaction
// ==============================

// L.1. login administrator
// ------------------------
L ekosmas 12345

// L.2 show drivers with bigger rate
// ---------------------------------
S B 10

// L.3 show drivers with smaller rate
// ----------------------------------
S V 10

// L.4 show more happy pasengers
// -----------------------------
S H 10

// L.5 show less happy pasengers
// -----------------------------
S Y 10

// L.6 show all vehicles
// ---------------------
S J

// L.7. change user category
// -------------------------
Y offensive_driver P
Y sveltos D

// L.8. logout administrator
----------------------------
O


// =====================
// M. User's interaction
// =====================
// note: here viastikos should be informed for his cancelled tickets, due to degradation of offensive_driver to passenger
L viastikos 12345
O

// note: sveltos should now have the additional functionality of a driver
L sveltos 12345
C BK-2 bicycle 1
// note: below "Plateia Eleytherias" should be added to the meeting points (since it is different from "Plateia Elftherias")
E Plateia_Eleytherias Giofyro 7 0 15 BK-2
// note: the next "searh for passengers" command should return an empty list
G
O

// ==============================
// N. Administrator's interaction
// ==============================

// N.1. login administrator
// ------------------------
L ekosmas 12345

// N.2. show meeting points
// ------------------------
S M

// N.3. group meeting points
// -------------------------
Q Plateia_Eleftherias Plateia_Eleytherias

// N.8. logout administrator
----------------------------
O


// =====================
// O. User's interaction
// =====================
L sveltos 12345
// note: the next "searh for passengers" command should return moving "Plateia_Eleytherias Giofyro 7" for student
G
// note: below "Plateia Eleytherias" should be added to the meeting points (since it is different from "Plateia Elftherias")
T student Plateia_Eleftherias Giofyro 7
O

// note:  below, student should be notified for new available moving (by sveltos)
L student 12345
H Plateia_Eleftherias Giofyro 7
B Plateia_Eleftherias Giofyro 7 BK-1
S T Plateia_Eleftherias Giofyro 7
O

// note: blow, sveltos should be notified for new ticket bought by student
L sveltos 12345
S C